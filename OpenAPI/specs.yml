openapi: "3.0.3"
info:
    description: This is API for MIREA Backend term paper, made by @rodyapal.
    version: "1.0.0"
    contact:
        name: Barbershop API
        url: https://github.com/rodyapal/mirea_backend_course_work/
    title: Barbershop API

servers:
    - description: Local API server
      url: http://localhost:8080/api/v1

tags:
    - name: barber
      description: Everything about barbers
    - name: service
      description: Fetch provided services data
    - name: client
      description: Get client data
    - name: event
      description: Get event data
    - name: review
      description: Get review data
    - name: card
      description: Get loyalty card data
    - name: connection
      description: Get info about barber-service connections

paths:
    /api/v1/barber:
        get:
            summary: "GET api/v1/barber"
            operationId: "getBarber"
            tags:
                - barber
            parameters:
                -   name: "id"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "name"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: '#/components/schemas/Barber'
        post:
            summary: "POST api/v1/barber"
            operationId: "newBarber"
            tags:
                - barber
            parameters:
                -   name: "name"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
                -   name: "rating"
                    in: "query"
                    required: true
                    schema:
                        type: "number"
                        format: "float"
                -   name: "serviceIds"
                    in: "query"
                    required: false
                    schema:
                        type: "array"
                        items:
                            type: integer
                            format: int32
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Barber'
        patch:
            summary: "PATCH api/v1/barber"
            operationId: "updateBarber"
            tags:
                - barber
            parameters:
                -   name: "barberId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "newName"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
                -   name: "newRating"
                    in: "query"
                    required: false
                    schema:
                        type: "number"
                        format: "float"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Barber'
        delete:
            summary: "DELETE api/v1/barber"
            operationId: "deleteBarber"
            tags:
                - barber
            parameters:
                -   name: "barberId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
    /api/v1/service:
        get:
            summary: "GET api/v1/service"
            operationId: "getService"
            tags:
                - service
            parameters:
                -   name: "id"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "name"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
                -   name: "maxPrice"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "minPrice"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: '#/components/schemas/Service'
        post:
            summary: "POST api/v1/service"
            operationId: "newService"
            tags:
                - service
            parameters:
                -   name: "name"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
                -   name: "description"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
                -   name: "duration"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "price"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "barberIds"
                    in: "query"
                    required: false
                    schema:
                        type: "array"
                        items:
                            type: integer
                            format: int32
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Service'
        patch:
            summary: "PATCH api/v1/service"
            operationId: "updateService"
            tags:
                - service
            parameters:
                -   name: "serviceId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "newName"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
                -   name: "newDuration"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "newPrice"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Service'
        delete:
            summary: "DELETE api/v1/service"
            operationId: "deleteService"
            tags:
                - service
            parameters:
                -   name: "serviceId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
    /api/v1/event:
        get:
            summary: "GET api/v1/event"
            operationId: "getEvent"
            tags:
                - event
            parameters:
                -   name: "id"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "barberId"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "clientId"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "serviceId"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: '#/components/schemas/Event'
        post:
            summary: "POST api/v1/event"
            operationId: "newEvent"
            tags:
                - event
            parameters:
                -   name: "barberId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "clientId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "serviceId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "visitDateTime"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int64"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Event'
        patch:
            summary: "PATCH api/v1/event"
            operationId: "updateEvent"
            tags:
                - event
            parameters:
                -   name: "eventId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "newBarberId"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "newClientId"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "newServiceId"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "newVisitDateTime"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int64"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Event'
        delete:
            summary: "DELETE api/v1/event"
            operationId: "deleteEvent"
            tags:
                - event
            parameters:
                -   name: "eventId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
    /api/v1/review:
        get:
            summary: "GET api/v1/review"
            operationId: "getReview"
            tags:
                - review
            parameters:
                -   name: "id"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "authorId"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: '#/components/schemas/Review'
        post:
            summary: "POST api/v1/review"
            operationId: "newReview"
            tags:
                - review
            parameters:
                -   name: "authorId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "content"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Review'
        patch:
            summary: "PATCH api/v1/review"
            operationId: "updateReview"
            tags:
                - review
            parameters:
                -   name: "reviewId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "newContent"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Review'
        delete:
            summary: "DELETE api/v1/review"
            operationId: "deleteReview"
            tags:
                - review
            parameters:
                -   name: "reviewId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
    /api/v1/client:
        get:
            summary: "GET api/v1/client"
            operationId: "getClient"
            tags:
                - client
            parameters:
                -   name: "id"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "name"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
                -   name: "email"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
                -   name: "phone"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: '#/components/schemas/Client'
        post:
            summary: "POST api/v1/client"
            operationId: "newClient"
            tags:
                - client
            parameters:
                -   name: "name"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
                -   name: "email"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
                -   name: "phone"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
                -   name: "password"
                    in: "query"
                    required: true
                    schema:
                        type: "string"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Client'
        patch:
            summary: "PATCH api/v1/client"
            operationId: "updateClient"
            tags:
                - client
            parameters:
                -   name: "clientId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "newName"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
                -   name: "newEmail"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
                -   name: "newPhone"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
                -   name: "newPassword"
                    in: "query"
                    required: false
                    schema:
                        type: "string"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Client'
        delete:
            summary: "DELETE api/v1/client"
            operationId: "deleteClient"
            tags:
                - client
            parameters:
                -   name: "clientId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
    /api/v1/card:
        get:
            summary: "GET api/v1/card"
            operationId: "getCards"
            tags:
                - card
            parameters:
                -   name: "cardId"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: '#/components/schemas/LoyaltyCard'
        post:
            summary: "POST api/v1/card"
            operationId: "newCard"
            tags:
                - card
            parameters:
                -   name: "discount"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoyaltyCard'
        patch:
            summary: "PATCH api/v1/card"
            operationId: "updateCard"
            tags:
                - card
            parameters:
                -   name: "cardId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "discount"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/LoyaltyCard'
        delete:
            summary: "DELETE api/v1/card"
            operationId: "deleteCard"
            tags:
                - card
            parameters:
                -   name: "cardId"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
    /api/v1/bs:
        get:
            summary: "GET api/v1/bs"
            operationId: "getConnection"
            tags:
                - connection
            parameters:
                -   name: "idBarber"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "idService"
                    in: "query"
                    required: false
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                type: "array"
                                items:
                                    $ref: '#/components/schemas/BSConnection'
        post:
            summary: "POST api/v1/bs"
            operationId: "newConnection"
            tags:
                - connection
            parameters:
                -   name: "idBarber"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "idService"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/BSConnection'
        delete:
            summary: "DELETE api/v1/bs"
            operationId: "deleteConnection"
            tags:
                - connection
            parameters:
                -   name: "idBarber"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
                -   name: "idService"
                    in: "query"
                    required: true
                    schema:
                        type: "integer"
                        format: "int32"
            responses:
                "200":
                    description: "OK"
components:
    schemas:
        Event:
            type: object
            properties:
                id:
                    type: integer
                service:
                    $ref: '#/components/schemas/Service'
                barber:
                    $ref: '#/components/schemas/Barber'
                client:
                    $ref: '#/components/schemas/Client'
                visitDateTime:
                    type: integer
                    format: int64
            required:
                - id
                - service
                - barber
                - client
                - visitDateTime
            example:
                error: true
                message: 'No such action. Try another'

        Service:
            type: object
            properties:
                id:
                    type: integer
                name:
                    type: string
                description:
                    type: string
                duration:
                    type: integer
                    format: int64
                price:
                    type: integer
                    format: int32
            required:
                - id
                - name
                - description
                - duration
                - price
            example:
                - id: 1
                  name: "Hair cut"
                  description: "Generic hair cut with scissors"
                  duration: 3600000
                  price: 1600
                - id: 2
                  name: "Beard modeling"
                  description: "Generic beard modeling"
                  duration: 5400000
                  price: 2000

        Barber:
            type: object
            properties:
                id:
                    type: integer
                name:
                    type: string
                rating:
                    type: number
                    format: float
            required:
                - id
                - name
                - rating
            example:
                - id: 3
                  name: "Nikita"
                  rating: 4.6

        LoyaltyCard:
            type: object
            properties:
                id:
                    type: integer
                discountPercent:
                    type: integer
            required:
                - id
                - discountPercent
            example:
                - id: 1234
                  discountPercent: 30
                - id: 23
                  discountPercent: 15

        Review:
            type: object
            properties:
                id:
                    type: integer
                content:
                    type: string
                creationTime:
                    type: integer
                    format: int64
                author:
                    type: object
            required:
                - id
                - content
                - creationTime
                - author

        Client:
            type: object
            properties:
                id:
                    type: integer
                name:
                    type: string
                email:
                    type: string
                    format: email
                password:
                    type: string
                    format: password
                phoneNumber:
                    type: string
                card:
                    $ref: '#/components/schemas/LoyaltyCard'
            required:
                - id
                - name
                - email
                - password
                - phoneNumber
            example:
                - id: 12
                  name: Ivan Ivanov
                  email: ivanov@me.ru
                  password: qwerty
                  phoneNumber: +7(811)456-23-42
                  card:
                      id: 1234
                      discountPercent: 30
                - id: 23
                  name: Pyotr Sidorov
                  email: sidorov.p@ya.ru
                  password: asdfgh
                  phoneNumber: +7(456)765-28-67

        BSConnection:
            type: object
            properties:
                barber:
                    $ref: '#/components/schemas/Barber'
                service:
                    $ref: '#/components/schemas/Service'
            required:
                - barber
                - service
            example:
                - barber:
                      id: 3
                      name: "Nikita"
                      rating: 4.6
                  service:
                      id: 2
                      name: "Beard modeling"
                      description: "Generic beard modeling"
                      duration: 5400000
                      price: 2000